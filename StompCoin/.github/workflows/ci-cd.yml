name: StompCoin CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Tests ausführen
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Xcode Version auswählen
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
    
    - name: Cache CocoaPods
      uses: actions/cache@v3
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-
    
    - name: CocoaPods installieren
      run: pod install
    
    - name: Unit Tests ausführen
      run: |
        xcodebuild test \
          -workspace StompCoin.xcworkspace \
          -scheme StompCoin \
          -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=17.0' \
          -enableCodeCoverage YES
    
    - name: Code Coverage Report generieren
      run: |
        xcrun xccov view --report --files-for-target StompCoin

  lint:
    name: Code Linting
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: SwiftLint installieren
      run: brew install swiftlint
    
    - name: SwiftLint ausführen
      run: swiftlint lint --reporter github-actions-logging

  build:
    name: Build
    needs: [test, lint]
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Xcode Version auswählen
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
    
    - name: CocoaPods installieren
      run: pod install
    
    - name: Development Build
      run: |
        xcodebuild archive \
          -workspace StompCoin.xcworkspace \
          -scheme StompCoin \
          -configuration Debug \
          -archivePath ./build/StompCoin-dev.xcarchive
    
    - name: Staging Build
      if: github.ref == 'refs/heads/develop'
      run: |
        xcodebuild archive \
          -workspace StompCoin.xcworkspace \
          -scheme StompCoin \
          -configuration Staging \
          -archivePath ./build/StompCoin-staging.xcarchive
    
    - name: Production Build
      if: github.ref == 'refs/heads/main'
      run: |
        xcodebuild archive \
          -workspace StompCoin.xcworkspace \
          -scheme StompCoin \
          -configuration Release \
          -archivePath ./build/StompCoin-prod.xcarchive

  deploy:
    name: Deploy
    needs: build
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Xcode Version auswählen
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
    
    - name: App Store Connect API Key herunterladen
      uses: apple-actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
    
    - name: Provisioning Profile herunterladen
      uses: apple-actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.stompcoin.app'
        profile-type: 'IOS_APP_STORE'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
    - name: App Store Deploy
      if: github.ref == 'refs/heads/main'
      run: |
        xcodebuild -exportArchive \
          -archivePath ./build/StompCoin-prod.xcarchive \
          -exportOptionsPlist ./ExportOptions.plist \
          -exportPath ./build
    
    - name: TestFlight Deploy
      if: github.ref == 'refs/heads/develop'
      run: |
        xcodebuild -exportArchive \
          -archivePath ./build/StompCoin-staging.xcarchive \
          -exportOptionsPlist ./ExportOptions-Staging.plist \
          -exportPath ./build

  notify:
    name: Benachrichtigung
    needs: [test, lint, build, deploy]
    runs-on: macos-latest
    if: always()
    
    steps:
    - name: Slack Benachrichtigung
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always() 